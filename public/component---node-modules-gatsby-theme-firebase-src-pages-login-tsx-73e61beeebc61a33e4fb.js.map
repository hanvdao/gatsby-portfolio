{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-firebase/src/pages/login.tsx","webpack:///./node_modules/gatsby-theme-firebase/src/firebase/auth/handleLoginSuccess.ts","webpack:///./node_modules/gatsby-theme-firebase/src/firebase/auth/handleSignUpSuccess.ts","webpack:///./node_modules/gatsby-theme-firebase/src/firebase/auth/handleResetSuccess.ts"],"names":["FormWithHandlers","loginRedirectPath","useFirebaseConfig","formState","FormState","useContainer","Form","onLoginSuccess","user","navigate","handleLoginSuccess","onSignUpSuccess","handleSignUpSuccess","onResetSuccess","setFormType","LoginPage","theme","styles","boxSizing","body","margin","Provider"],"mappings":"0LAWMA,EAAmB,WAAM,IACrBC,EAAsBC,cAAtBD,kBACFE,EAAYC,IAAUC,eAC5B,OACE,YAACC,EAAA,EAAD,CACEC,eAAgB,SAAAC,ICPP,YAA6C,IAA1CP,EAA0C,EAA1CA,kBAChBQ,mBAASR,GDOHS,CAAmB,OAAD,UAAMP,EAAN,CAAiBK,OAAMP,wBAE3CU,gBAAiB,SAAAH,IEVR,YAA8C,IAA3CP,EAA2C,EAA3CA,kBAChBQ,mBAASR,GFUHW,CAAoB,OAAD,UAAMT,EAAN,CAAiBK,OAAMP,wBAE5CY,eAAgB,YGfpBC,EHgByB,OAAD,UAAMX,EAAN,CAAiBF,sBGjBzBa,aACJ,aH4CCC,UAtBG,WAChB,OACE,YAAC,IAAD,CAAeC,MAAOA,KACpB,YAAC,IAAD,CACEC,OAAQ,CACN,IAAK,CACHC,UAAW,cAEbC,KAAM,CACJC,OAAQ,MAId,YAAChB,EAAA,EAAUiB,SAAX,KACE,YAAC,IAAD,KACE,YAAC,EAAD","file":"component---node-modules-gatsby-theme-firebase-src-pages-login-tsx-73e61beeebc61a33e4fb.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, ThemeProvider, Layout } from \"theme-ui\";\nimport { Global } from \"@emotion/core\";\nimport useFirebaseConfig from \"../hooks/useFirebaseConfig\";\nimport handleLoginSuccess from \"../firebase/auth/handleLoginSuccess\";\nimport handleSignUpSuccess from \"../firebase/auth/handleSignUpSuccess\";\nimport handleResetSuccess from \"../firebase/auth/handleResetSuccess\";\nimport FormState from \"../containers/FormState\";\nimport Form from \"../components/Form\";\nimport theme from \"../gatsby-plugin-theme-ui\";\n\nconst FormWithHandlers = () => {\n  const { loginRedirectPath } = useFirebaseConfig();\n  const formState = FormState.useContainer();\n  return (\n    <Form\n      onLoginSuccess={user => {\n        handleLoginSuccess({ ...formState, user, loginRedirectPath });\n      }}\n      onSignUpSuccess={user => {\n        handleSignUpSuccess({ ...formState, user, loginRedirectPath });\n      }}\n      onResetSuccess={() => {\n        handleResetSuccess({ ...formState, loginRedirectPath });\n      }}\n    />\n  );\n};\n\nconst LoginPage = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Global\n        styles={{\n          \"*\": {\n            boxSizing: \"border-box\",\n          },\n          body: {\n            margin: 0,\n          },\n        }}\n      />\n      <FormState.Provider>\n        <Layout>\n          <FormWithHandlers />\n        </Layout>\n      </FormState.Provider>\n    </ThemeProvider>\n  );\n};\n\nexport default LoginPage;\n","import { navigate } from \"gatsby\";\nimport firebase from \"firebase\";\nimport { FormStateType } from \"../../containers/FormState\";\n\nexport interface LoginSuccessArgs extends FormStateType {\n  user?: firebase.auth.UserCredential;\n  loginRedirectPath: string;\n}\n\nexport default ({ loginRedirectPath }: LoginSuccessArgs) => {\n  navigate(loginRedirectPath);\n};\n","import { navigate } from \"gatsby\";\nimport firebase from \"firebase\";\nimport { FormStateType } from \"../../containers/FormState\";\n\nexport interface SignUpSuccessArgs extends FormStateType {\n  user?: firebase.User | null;\n  loginRedirectPath: string;\n}\n\nexport default ({ loginRedirectPath }: SignUpSuccessArgs) => {\n  navigate(loginRedirectPath);\n};\n","import { FormStateType } from \"../../containers/FormState\";\n\nexport interface ResetSuccessArgs extends FormStateType {\n  loginRedirectPath: string;\n}\n\nexport default ({ setFormType }: ResetSuccessArgs) => {\n  setFormType(\"login\");\n};\n"],"sourceRoot":""}